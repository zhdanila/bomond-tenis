// Code generated by go-swagger; DO NOT EDIT.

package courts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteV1BomondCourtIDBookBookIDHandlerFunc turns a function with the right signature into a delete v1 bomond court ID book book ID handler
type DeleteV1BomondCourtIDBookBookIDHandlerFunc func(DeleteV1BomondCourtIDBookBookIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteV1BomondCourtIDBookBookIDHandlerFunc) Handle(params DeleteV1BomondCourtIDBookBookIDParams) middleware.Responder {
	return fn(params)
}

// DeleteV1BomondCourtIDBookBookIDHandler interface for that can handle valid delete v1 bomond court ID book book ID params
type DeleteV1BomondCourtIDBookBookIDHandler interface {
	Handle(DeleteV1BomondCourtIDBookBookIDParams) middleware.Responder
}

// NewDeleteV1BomondCourtIDBookBookID creates a new http.Handler for the delete v1 bomond court ID book book ID operation
func NewDeleteV1BomondCourtIDBookBookID(ctx *middleware.Context, handler DeleteV1BomondCourtIDBookBookIDHandler) *DeleteV1BomondCourtIDBookBookID {
	return &DeleteV1BomondCourtIDBookBookID{Context: ctx, Handler: handler}
}

/*
	DeleteV1BomondCourtIDBookBookID swagger:route DELETE /v1/bomond/{court_id}/book/{book_id} Courts deleteV1BomondCourtIdBookBookId

DeleteV1BomondCourtIDBookBookID delete v1 bomond court ID book book ID API
*/
type DeleteV1BomondCourtIDBookBookID struct {
	Context *middleware.Context
	Handler DeleteV1BomondCourtIDBookBookIDHandler
}

func (o *DeleteV1BomondCourtIDBookBookID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteV1BomondCourtIDBookBookIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
