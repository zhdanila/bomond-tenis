// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteV1BomondVnUsersUserIDHandlerFunc turns a function with the right signature into a delete v1 bomond vn users user ID handler
type DeleteV1BomondVnUsersUserIDHandlerFunc func(DeleteV1BomondVnUsersUserIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteV1BomondVnUsersUserIDHandlerFunc) Handle(params DeleteV1BomondVnUsersUserIDParams) middleware.Responder {
	return fn(params)
}

// DeleteV1BomondVnUsersUserIDHandler interface for that can handle valid delete v1 bomond vn users user ID params
type DeleteV1BomondVnUsersUserIDHandler interface {
	Handle(DeleteV1BomondVnUsersUserIDParams) middleware.Responder
}

// NewDeleteV1BomondVnUsersUserID creates a new http.Handler for the delete v1 bomond vn users user ID operation
func NewDeleteV1BomondVnUsersUserID(ctx *middleware.Context, handler DeleteV1BomondVnUsersUserIDHandler) *DeleteV1BomondVnUsersUserID {
	return &DeleteV1BomondVnUsersUserID{Context: ctx, Handler: handler}
}

/*
	DeleteV1BomondVnUsersUserID swagger:route DELETE /v1/bomond.vn/users/{user_id} Users deleteV1BomondVnUsersUserId

DeleteV1BomondVnUsersUserID delete v1 bomond vn users user ID API
*/
type DeleteV1BomondVnUsersUserID struct {
	Context *middleware.Context
	Handler DeleteV1BomondVnUsersUserIDHandler
}

func (o *DeleteV1BomondVnUsersUserID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteV1BomondVnUsersUserIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
